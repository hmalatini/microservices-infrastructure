name: CI - Main Branch

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*.*.*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tagName:
        required: false
        description: 'Manual tag name'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check-variables:
    name: Check needed variables
    runs-on: ubuntu-latest

    outputs:
      can-run: ${{ steps.set-up-vars.outputs.can-run }}

    steps:
      - name: Set up variables
        id: set-up-vars
        run: echo "::set-output name=can-run::${{ secrets.DOCKERHUB_REGISTRY != 0 && secrets.DOCKERHUB_USERNAME != 0 && secrets.DOCKERHUB_TOKEN != 0 }}"

  test:
    name: Test code
    runs-on: ubuntu-latest
    needs: check-variables

    if: ${{ needs.check-variables.outputs.can-run == 'true' }}

    steps:
      - name: Record build start
        id: record_build_time
        run: echo "::set-output name=start_build_time_in_seconds::$(date +%s)"

      - name: Fetch code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Compile Code
        run: mvn compile

      - name: Test Code
        run: mvn test

  tag:
    name: Create a release tag
    runs-on: ubuntu-latest
    needs: check-variables

    if: ${{ needs.check-variables.outputs.can-run == 'true' }}

    outputs:
      release-version: ${{ steps.out_vars.outputs.version }}
      release-tag: ${{ steps.out_vars.outputs.tag }}
      release-changelog: ${{ steps.out_vars.outputs.changelog }}

    steps:
      - uses: actions/checkout@v2
        if: ${{ ! github.event.inputs.tagName }}

      - name: Bump version and push tag
        if: ${{ ! github.event.inputs.tagName }}
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set outputs variables
        id: out_vars
        run: |
          if [ "$MANUAL_TAG" != "" ]
          then
              echo "::set-output name=version::${{ github.event.inputs.tagName }}"
          else
              echo "::set-output name=version::${{ steps.tag_version.outputs.new_version }}"
          fi
          if [ "$MANUAL_TAG" != "" ]
          then
              echo "::set-output name=tag::${{ github.event.inputs.tagName }}"
          else
              echo "::set-output name=tag::${{ steps.tag_version.outputs.new_tag }}"
          fi
          if [ "$MANUAL_TAG" != "" ]
          then
              echo "::set-output name=changelog::"
          else
              echo "::set-output name=changelog::${{ steps.tag_version.outputs.changelog }}"
          fi
        env:
          MANUAL_TAG: ${{ github.event.inputs.tagName }}

  push:
    needs: [test, tag]

    name: Push Docker image to Docker Hub

    runs-on: ubuntu-latest

    steps:
      - name: Fetch code
        uses: actions/checkout@v2

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REGISTRY }} # list of Docker images to use as base name for tags
          tag-sha: true # add git short SHA as Docker tag

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REGISTRY }}:${{ github.event.repository.name }}-${{ needs.tag.outputs.release-version }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  release:
    name: Create a Github release
    needs: [tag, push]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.release-tag }}
          release_name: Release ${{ needs.tag.outputs.release-tag }}
          body: ${{ needs.tag.outputs.release-changelog }}
